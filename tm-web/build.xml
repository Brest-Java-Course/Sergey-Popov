<?xml version="1.0" encoding="UTF-8"?>
<project name="tm-web">
	<!-- =================================
              Property file
     ================================= -->
	<property file="build.properties"/>

	<!-- =================================
          Common build file
	 ================================= -->
	<import file="${projects.dir}/common/commoncfg.xml"/>

    	<!-- =================================
	    Path for main Java dependencies.
	 ================================= -->
    	<path id="lib.main.path">
        	<fileset dir="${lib.main.dir}">
            		<include name="**.*jar"/>
        	</fileset>
		<pathelement location="${lib.main.dir}/tm-domain-0.7.0.jar"/>
		<pathelement location="${lib.main.dir}/tm-dao-0.7.0.jar"/>
		<pathelement location="${lib.main.dir}/tm-service-0.7.0.jar"/>
    	</path>

	<!-- =================================
		Junit classpath 
	 ================================= -->
	<path id="junit.class.path">
		<pathelement location="${lib.test.dir}/hamcrest-core-1.3.jar"/>
		<pathelement location="${lib.main.dir}/joda-time-2.7.jar"/>
		<pathelement location="${lib.main.dir}/commons-logging-1.2.jar"/>
		<pathelement location="${lib.main.dir}/spring-core-4.1.4.RELEASE.jar"/>
		<pathelement location="${lib.main.dir}/spring-beans-4.1.4.RELEASE.jar"/>
		<pathelement location="${lib.main.dir}/spring-context-4.1.4.RELEASE.jar"/>
		<pathelement location="${lib.main.dir}/spring-aop-4.1.4.RELEASE.jar"/>
		<pathelement location="${lib.main.dir}/spring-expression-4.1.4.RELEASE.jar"/>
		<pathelement location="${lib.test.dir}/spring-test-4.1.4.RELEASE.jar"/>
		<pathelement location="${lib.test.dir}/easymock-3.3.1.jar"/>
		<pathelement location="${lib.main.dir}/tm-domain-0.7.0.jar"/>
		<pathelement location="${lib.main.dir}/tm-dao-0.7.0.jar"/>
		<pathelement location="${lib.main.dir}/tm-service-0.7.0.jar"/>
		<pathelement location="${classes.dir}"/>
		<pathelement location="${testclasses.dir}"/>			
	</path>

	 <!-- ================================= 
          	target: info              
         ================================= -->
	<target name="info" description="--> project description">
		<echo>TM-WEB ${version} module.</echo>
	</target>

	<!-- =================================
  target: clean
   ================================= -->
	<target name="clean" description="--> clean the project build files">
		<delete includeemptydirs="true" dir="${build.dir}"/>
	</target>

	<!-- =================================
      			target: compile
 	 ================================= -->
	<target name="compile" description="--> compile main Java sources">
		<echo>Compiling ${ant.project.name}</echo>
		<mkdir dir="${classes.dir}" />
		<copy todir="${classes.dir}" failonerror="false">
			<fileset dir="${src.main.res.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<javac includeantruntime="false" srcdir="${src.main.java.dir}" destdir="${classes.dir}" debug="true">
			<classpath refid="main.compile.path"/>
		</javac>
	</target>

	<!-- =================================
		target: Compile test Java sources.
	================================= -->
	<target name="testCompile" description="--> compile test Java sources">
		<mkdir dir="${testclasses.dir}" />
		<copy todir="${testclasses.dir}" failonerror="false">
			<fileset dir="${src.test.res.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<javac includeantruntime="false" srcdir="${src.test.java.dir}" destdir="${testclasses.dir}">
			<classpath refid="test.compile.path"/>
			<classpath location="${classes.dir}" />
		</javac>
	</target>

	<!-- =================================
  			target: Run tests.
 	 ================================= -->
	<target name="test" description="--> compile and run the tests">
		<junit printsummary="on" fork="yes" haltonfailure="yes">
			<classpath refid="junit.class.path"/>
			<batchtest>
				<fileset dir="${testclasses.dir}">
					<include name="**/*Test*" />
				</fileset>
			</batchtest>
			<formatter type="brief" usefile="false"/>
		</junit>
	</target>

    <!-- =================================
          	target: war              
	 ================================= -->
    <target name="war" description="--> make a war file for this project">
        <war destfile="${war.file}" webxml="${webapp.webinf.dir}/web.xml">
			<fileset dir="${webapp.dir}"> 
				<exclude name="web.xml"/>			
			</fileset>
			<lib dir="${lib.dir}"/>							
			<classes dir="${classes.dir}"/>			
        </war>
    </target>
</project>